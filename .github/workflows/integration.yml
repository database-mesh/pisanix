name: Integration Test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - ci 

jobs:
  run:
    name: Integration Test
    runs-on: ubuntu-latest 
    steps:
      - name: "checkout codes" 
        uses: actions/checkout@master
      - name: "setup kind"
        uses: helm/kind-action
      - name: "setup helm"
        uses: azure/setup-helm@v2.1
      - name: "setup kubectl" 
        uses: azure/setup-kubectl@v2.0
      - name: "declare github variables" 
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
             echo "##[set-output name=tags;]$(echo ${GITHUB_REF#refs/tags/})"  
          else
             echo "##[set-output name=tags;]$(echo '')"
          fi
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"  
          else
             echo "##[set-output name=branch;]$(echo '')"
          fi
      - name: "Pisa-Controller kaniko build"
        uses: mlycore/action-kaniko@master
        with:
          image: pisanixio/controller
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          build_file: pisa-controller/hack/Dockerfile 
          tag_with_latest: true
          extra_args: --build-arg GIT_BRANCH=${{ steps.vars.outputs.branch }} --build-arg GIT_COMMIT=${{ steps.vars.outputs.sha_short }} --build-arg GIT_TAG=${{ steps.vars.outputs.tags }}
      - name: "Pisa-Proxy kaniko build"
        uses: mlycore/action-kaniko@master
        with:
          image: pisanixio/proxy
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          build_file: pisa-proxy/hack/Dockerfile
          tag_with_latest: true
          extra_args: --build-arg GIT_BRANCH=${{ steps.vars.outputs.branch }} --build-arg GIT_COMMIT=${{ steps.vars.outputs.sha_short }} --build-arg GIT_TAG=${{ steps.vars.outputs.tags }}
      - name: "install Pisa Controller"
        run: |
          export PISANIX_NAMESPACE="pisanix-system"
          cd charts/pisa-controller 
          helm dependency build
          cd ..
          helm install pisa-controller pisa-controller -n ${PISANIX_NAMESPACE} 
          kubectl wait --timeout=60s --for=condition=ready --all pod
          cd ..
          cd test/kubernetes
          kubectl apply -f mysql.yml 
          kubectl apply -f virtualdatabase.yml 
          kubectl apply -f trafficstrategy.yml
          kubectl apply -f databaseendpoint.yml
          kubectl apply -f app.yml 
          kubectl wait --timeout=60s --for=condition=ready --all pod
          kubectl port-forward -n default svc/test 3306:3306 &
      - name: "install mysql-cli" 
        run: |
          apt-get install mysql-cli
      - name: "run tests" 
        run: |
          bash test/kubernetes/run.sh